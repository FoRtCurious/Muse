@{
    Layout = null;
}

<div style="padding-top:5px;">
    <label style="width:200px;font-size:15px;font-weight:600">商城管理&nbsp;&rang;&nbsp;用户订单信息</label>
</div>
<table class="layui-hide" id="demo" lay-filter="tableData"></table>

<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-xs" lay-event="detail"><i class="layui-icon layui-icon-search"></i>订单详情</a>
</script>
<script type="text/html" id="toolbar">
    <input class="text" style="height:30px;width:168px;border-radius:20px;padding-left:5px;" name="" id="search_id" placeholder="请输入查找订单ID">
    <a id="search" lay-filter="" style="position: absolute;left: 144px;cursor:pointer" lay-event="search">
        <i class="layui-icon layui-icon-search" style="background:#fff;padding:5px;"></i>
    </a>
</script>

<script type="text/javascript" src="~/Content/layui-v2.5.6/layui/layui.all.js"></script>
<script>
layui.use(['laypage', 'layer', 'table','element'], function(){
  var laypage = layui.laypage //分页
  ,layer = layui.layer //弹层
  ,table = layui.table //表格
  , element = layui.element //元素操作

  //执行一个 table 实例
  table.render({
      elem: '#demo'
    , id: 'tableData'
    , url: '/Admin/Orders' //数据接口
    , title: '用户订单表'
    , page: true //开启分页
    , limit: 12
    , method: 'get'  //提交方式
    , toolbar: '#toolbar' //开启工具栏，此处显示默认图标，可以自定义模板，详见文档
    ,cols: [[ //表头
      { type: 'checkbox', fixed: 'left'}
      , { field: 'orderid', title: '订单ID', sort: true, fixed: 'left' }
      , { field: 'userid', title: '用户ID', fixed: 'left' }
      , { field: 'userid', title: '用户昵称', templet: '<div>{{ToUsername(d.userid)}}</div>' }//通过外键转化
      , { field: 'addressid', title: '收货地址', templet: '<div>{{ToAddress(d.addressid)}}</div>', width: 300 }//通过外键转化
      , { field: 'ordertime', title: '下单时间', templet: "<div>{{createTime(d.ordertime)}}</div>"}//通过函数转化
      , { field: 'Tot_amt', title: '结算金额(元)', templet: function (d) { return Number(d.Tot_amt).toFixed(2); } }//保留小数点后两位
      , { fixed: 'right',title:'操作', width: 100, align:'center', toolbar: '#barDemo'}
    ]]
  });
    //回车查询
  $('#search_id').keydown(function (e) {
      if (e.keyCode == 13) {
          $('#search').trigger("click");
      }
  });
  //监听头工具栏事件
  table.on('toolbar(tableData)', function(obj){
    var checkStatus = table.checkStatus(obj.config.id)
    ,data = checkStatus.data; //获取选中的数据
    switch(obj.event){
      case 'search':
          layer.msg('查询结果');
          var send_id = $('#search_id').val();
          table.reload('tableData', {
              method: 'get'
              , url: '/Admin/SearchUserOrders'
              , where: {
                  search_id: send_id,
              }
              , page: {
                  curr: 1
              }
          });
      break;
    };
  });

  //监听行工具事件
  table.on('tool(tableData)', function(obj) {
      var data = obj.data;
      json = JSON.stringify(data);
      switch(obj.event) {
          case 'detail':
              var index = layer.open({
                  type: 2,
                  title: "用户订单详情",
                  area: ['65%', '80%'],
                  fix: false,
                  maxmin: false,
                  shadeClose: true,
                  shade: 0.4,
                  skin: 'layui-layer-rim',
                  content: ["/Admin/OrdersDetails/" + data.orderid],
              });
              break;
      }
  });

  //分页
  laypage.render({
    elem: 'pageDemo' //分页容器的id
    ,count: 100 //总页数
    ,skin: '#1E9FFF' //自定义选中色值
    //,skip: true //开启跳页
    ,jump: function(obj, first){
      if(!first){
        layer.msg('第'+ obj.curr +'页', {offset: 'b'});
      }
    }
  });

});

//将userid变成usename，应用template模板
function ToUsername(userid) {
    var id = userid;
    var title;
    $.ajax({
        url: '/Admin/GetUsersJson',//你的后台请求路径
        dataType: 'json',
        async: false,//同步
        success: function (data) {
            $.each(data.data, function (i, item) {
                if (item.userId == id) {
                    title = item.name;
                }
            });
        }
    });
    return title;
};
//将addressid变成addressname，应用template模板
function ToAddress(addressid) {
    var id = addressid;
    var title;
    $.ajax({
        url: '/Admin/ReceiptAddress',//你的后台请求路径
        dataType: 'json',
        async: false,//同步
        success: function (data) {
            $.each(data.data, function (i, item) {
                if (item.addressid == id) {
                    title = item.address;
                }
            });
        }
    });
    return title;
};

</script>

